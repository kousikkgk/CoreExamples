package io.kousik.moviecatalogservice.resources;

import java.util.List;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.reactive.function.client.WebClient;

import io.kousik.moviecatalogservice.model.CatalogItem;
import io.kousik.moviecatalogservice.model.Movie;
import io.kousik.moviecatalogservice.model.UserRating;

@RestController
@RequestMapping("/catalog")
public class MovieCatalogResource {
	@Autowired
	private RestTemplate restTemplate;

	@Autowired
	private WebClient.Builder webClientBuilder;

	@RequestMapping("/{userId}")
	public List<CatalogItem> getCatalog(@PathVariable("userId") String userId) {

		// RestTemplate restTemplate = new RestTemplate();
		// Movie movie = restTemplate.getForObject("http://localhost:8081/movies/foo",
		// Movie.class);
		// WebClient.Builder builder = WebClient.builder();
		//UserRating ratings = restTemplate.getForObject("http://localhost:8083/ratingdata/user/" + userId,
		UserRating ratings = restTemplate.getForObject("http://ratings-data-service/ratingsdata/user/" + userId,
				UserRating.class);
	
		// Arrays.asList(new Rating("1234", 4), new Rating("5678", 5));
		return ratings.getRatings().stream().map(rating -> {

			/** for each movie ID, call movie info service and get details**/
			// Synchronus way
//			Movie movie = restTemplate.getForObject("http://localhost:8082/movies/" + rating.getMovieId(), Movie.class);
			Movie movie = restTemplate.getForObject("http://movie-info-service/movies/" + rating.getMovieId(), Movie.class);

			/** put them all togther **/
			return new CatalogItem(movie.getName(), "Amir Khan", rating.getRating());
			
			/**get all movie rated IDs**/
		}).collect(Collectors.toList());

		// ratings.stream().map(rating ->{
		// Movie
		// movie=restTemplate.getForObject("http://localhost:8082/movies/"+rating.getMovieId(),
		// Movie.class)
		// return new CatalogItem(movie.getName(), "Amir Khan",
		// rating.getRating()).collect(Collectors.toList()});

		// return Collections.singletonList(new CatalogItem("PK", "Amir Khan", 5));

	}
}
/* Asynchrnous process */
/** starter-webflux dependencies **/
/*
 * Movie movie=webClientBuilder.build() .get() //method post or get
 * .uri("http://localhost:8082/movies/" + rating.getMovieId()) .retrieve()
 * //fetch .bodyToMono(Movie.class) // convert the instance into that
 * movie.class .block(); // waiting or bloking until the object is not empty
 */
